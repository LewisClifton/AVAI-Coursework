from torch import nn

class SRCNN(nn.Module):
    def __init__(self, scale_factor=8):
        super(SRCNN, self).__init__()

        self.scale_factor = scale_factor

        self.conv1 = nn.Conv2d(in_channels=1, out_channels=64, kernel_size=9, stride=1, padding=0)
        self.conv2 = nn.Conv2d(in_channels=64, out_channels=32, kernel_size=5, stride=1, padding=0)
        self.conv3 = nn.Conv2d(in_channels=32,out_channels=1, kernel_size=5, stride=1, padding=0)
        self.relu = nn.ReLU(inplace=True)

    def forward(self, x):
        x = nn.functional.interpolate(x, scale_factor=self.scale_factor, mode='bicubic', align_corners=False)

        x = self.conv1(x)
        x = self.relu(x)

        x = self.conv2(x)
        x = self.relu()

        x = self.conv3(x)
        return x